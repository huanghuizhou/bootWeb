<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hhz.demo.dao.TEmployeeRoleRelationMapper">
    <resultMap id="BaseResultMap" type="com.hhz.demo.model.TEmployeeRoleRelation">
        <id column="employee_id" jdbcType="BIGINT" property="employeeId"/>
        <id column="role_id" jdbcType="BIGINT" property="roleId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hhz.demo.model.TEmployeeRoleRelation">
        <result column="charge_range" jdbcType="LONGVARCHAR" property="chargeRange"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    employee_id, role_id
  </sql>
    <sql id="Blob_Column_List">
    charge_range
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.hhz.demo.model.TEmployeeRoleRelationExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_employee_role_relation
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.hhz.demo.model.TEmployeeRoleRelationExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_employee_role_relation
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_employee_role_relation
        where employee_id = #{employeeId,jdbcType=BIGINT}
        and role_id = #{roleId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="map">
    delete from t_employee_role_relation
    where employee_id = #{employeeId,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.hhz.demo.model.TEmployeeRoleRelationExample">
        delete from t_employee_role_relation
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.hhz.demo.model.TEmployeeRoleRelation">
    insert into t_employee_role_relation (employee_id, role_id, charge_range
      )
    values (#{employeeId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{chargeRange,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.hhz.demo.model.TEmployeeRoleRelation">
        insert into t_employee_role_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="employeeId != null">
                employee_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="chargeRange != null">
                charge_range,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="employeeId != null">
                #{employeeId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="chargeRange != null">
                #{chargeRange,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hhz.demo.model.TEmployeeRoleRelationExample"
            resultType="java.lang.Integer">
        select count(*) from t_employee_role_relation
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_employee_role_relation
        <set>
            <if test="record.employeeId != null">
                employee_id = #{record.employeeId,jdbcType=BIGINT},
            </if>
            <if test="record.roleId != null">
                role_id = #{record.roleId,jdbcType=BIGINT},
            </if>
            <if test="record.chargeRange != null">
                charge_range = #{record.chargeRange,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_employee_role_relation
        set employee_id = #{record.employeeId,jdbcType=BIGINT},
        role_id = #{record.roleId,jdbcType=BIGINT},
        charge_range = #{record.chargeRange,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_employee_role_relation
        set employee_id = #{record.employeeId,jdbcType=BIGINT},
        role_id = #{record.roleId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hhz.demo.model.TEmployeeRoleRelation">
        update t_employee_role_relation
        <set>
            <if test="chargeRange != null">
                charge_range = #{chargeRange,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where employee_id = #{employeeId,jdbcType=BIGINT}
        and role_id = #{roleId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hhz.demo.model.TEmployeeRoleRelation">
    update t_employee_role_relation
    set charge_range = #{chargeRange,jdbcType=LONGVARCHAR}
    where employee_id = #{employeeId,jdbcType=BIGINT}
      and role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>