<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uniubi.dao.TEmployeeMapper">
    <resultMap id="BaseResultMap" type="com.uniubi.model.po.TEmployee">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="account_id" jdbcType="BIGINT" property="accountId"/>
        <result column="organization_id" jdbcType="BIGINT" property="organizationId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="position" jdbcType="VARCHAR" property="position"/>
        <result column="employee_number" jdbcType="VARCHAR" property="employeeNumber"/>
        <result column="mail" jdbcType="VARCHAR" property="mail"/>
        <result column="tel_number" jdbcType="VARCHAR" property="telNumber"/>
        <result column="work_place" jdbcType="VARCHAR" property="workPlace"/>
        <result column="entry_time" jdbcType="VARCHAR" property="entryTime"/>
        <result column="outer_position" jdbcType="VARCHAR" property="outerPosition"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.uniubi.model.po.TEmployee">
        <result column="sortable_custom_info" jdbcType="LONGVARCHAR" property="sortableCustomInfo"/>
        <result column="custom_info" jdbcType="LONGVARCHAR" property="customInfo"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, account_id, organization_id, name, position, employee_number, mail, tel_number, 
    work_place, entry_time, outer_position, remarks
  </sql>
    <sql id="Blob_Column_List">
    sortable_custom_info, custom_info
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.uniubi.model.po.TEmployeeExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.uniubi.model.po.TEmployeeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_employee
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.uniubi.model.po.TEmployeeExample">
        delete from t_employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.uniubi.model.po.TEmployee">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_employee (account_id, organization_id, name,
        position, employee_number, mail,
        tel_number, work_place, entry_time,
        outer_position, remarks, sortable_custom_info,
        custom_info)
        values (#{accountId,jdbcType=BIGINT}, #{organizationId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
        #{position,jdbcType=VARCHAR}, #{employeeNumber,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR},
        #{telNumber,jdbcType=VARCHAR}, #{workPlace,jdbcType=VARCHAR}, #{entryTime,jdbcType=VARCHAR},
        #{outerPosition,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{sortableCustomInfo,jdbcType=LONGVARCHAR},
        #{customInfo,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.uniubi.model.po.TEmployee">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">
                account_id,
            </if>
            <if test="organizationId != null">
                organization_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="position != null">
                position,
            </if>
            <if test="employeeNumber != null">
                employee_number,
            </if>
            <if test="mail != null">
                mail,
            </if>
            <if test="telNumber != null">
                tel_number,
            </if>
            <if test="workPlace != null">
                work_place,
            </if>
            <if test="entryTime != null">
                entry_time,
            </if>
            <if test="outerPosition != null">
                outer_position,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="sortableCustomInfo != null">
                sortable_custom_info,
            </if>
            <if test="customInfo != null">
                custom_info,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accountId != null">
                #{accountId,jdbcType=BIGINT},
            </if>
            <if test="organizationId != null">
                #{organizationId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                #{position,jdbcType=VARCHAR},
            </if>
            <if test="employeeNumber != null">
                #{employeeNumber,jdbcType=VARCHAR},
            </if>
            <if test="mail != null">
                #{mail,jdbcType=VARCHAR},
            </if>
            <if test="telNumber != null">
                #{telNumber,jdbcType=VARCHAR},
            </if>
            <if test="workPlace != null">
                #{workPlace,jdbcType=VARCHAR},
            </if>
            <if test="entryTime != null">
                #{entryTime,jdbcType=VARCHAR},
            </if>
            <if test="outerPosition != null">
                #{outerPosition,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="sortableCustomInfo != null">
                #{sortableCustomInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="customInfo != null">
                #{customInfo,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.uniubi.model.po.TEmployeeExample" resultType="java.lang.Integer">
        select count(*) from t_employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_employee
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.accountId != null">
                account_id = #{record.accountId,jdbcType=BIGINT},
            </if>
            <if test="record.organizationId != null">
                organization_id = #{record.organizationId,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.position != null">
                position = #{record.position,jdbcType=VARCHAR},
            </if>
            <if test="record.employeeNumber != null">
                employee_number = #{record.employeeNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.mail != null">
                mail = #{record.mail,jdbcType=VARCHAR},
            </if>
            <if test="record.telNumber != null">
                tel_number = #{record.telNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.workPlace != null">
                work_place = #{record.workPlace,jdbcType=VARCHAR},
            </if>
            <if test="record.entryTime != null">
                entry_time = #{record.entryTime,jdbcType=VARCHAR},
            </if>
            <if test="record.outerPosition != null">
                outer_position = #{record.outerPosition,jdbcType=VARCHAR},
            </if>
            <if test="record.remarks != null">
                remarks = #{record.remarks,jdbcType=VARCHAR},
            </if>
            <if test="record.sortableCustomInfo != null">
                sortable_custom_info = #{record.sortableCustomInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.customInfo != null">
                custom_info = #{record.customInfo,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_employee
        set id = #{record.id,jdbcType=BIGINT},
        account_id = #{record.accountId,jdbcType=BIGINT},
        organization_id = #{record.organizationId,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        position = #{record.position,jdbcType=VARCHAR},
        employee_number = #{record.employeeNumber,jdbcType=VARCHAR},
        mail = #{record.mail,jdbcType=VARCHAR},
        tel_number = #{record.telNumber,jdbcType=VARCHAR},
        work_place = #{record.workPlace,jdbcType=VARCHAR},
        entry_time = #{record.entryTime,jdbcType=VARCHAR},
        outer_position = #{record.outerPosition,jdbcType=VARCHAR},
        remarks = #{record.remarks,jdbcType=VARCHAR},
        sortable_custom_info = #{record.sortableCustomInfo,jdbcType=LONGVARCHAR},
        custom_info = #{record.customInfo,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_employee
        set id = #{record.id,jdbcType=BIGINT},
        account_id = #{record.accountId,jdbcType=BIGINT},
        organization_id = #{record.organizationId,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        position = #{record.position,jdbcType=VARCHAR},
        employee_number = #{record.employeeNumber,jdbcType=VARCHAR},
        mail = #{record.mail,jdbcType=VARCHAR},
        tel_number = #{record.telNumber,jdbcType=VARCHAR},
        work_place = #{record.workPlace,jdbcType=VARCHAR},
        entry_time = #{record.entryTime,jdbcType=VARCHAR},
        outer_position = #{record.outerPosition,jdbcType=VARCHAR},
        remarks = #{record.remarks,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.uniubi.model.po.TEmployee">
        update t_employee
        <set>
            <if test="accountId != null">
                account_id = #{accountId,jdbcType=BIGINT},
            </if>
            <if test="organizationId != null">
                organization_id = #{organizationId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                position = #{position,jdbcType=VARCHAR},
            </if>
            <if test="employeeNumber != null">
                employee_number = #{employeeNumber,jdbcType=VARCHAR},
            </if>
            <if test="mail != null">
                mail = #{mail,jdbcType=VARCHAR},
            </if>
            <if test="telNumber != null">
                tel_number = #{telNumber,jdbcType=VARCHAR},
            </if>
            <if test="workPlace != null">
                work_place = #{workPlace,jdbcType=VARCHAR},
            </if>
            <if test="entryTime != null">
                entry_time = #{entryTime,jdbcType=VARCHAR},
            </if>
            <if test="outerPosition != null">
                outer_position = #{outerPosition,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="sortableCustomInfo != null">
                sortable_custom_info = #{sortableCustomInfo,jdbcType=LONGVARCHAR},
            </if>
            <if test="customInfo != null">
                custom_info = #{customInfo,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.uniubi.model.po.TEmployee">
    update t_employee
    set account_id = #{accountId,jdbcType=BIGINT},
      organization_id = #{organizationId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      employee_number = #{employeeNumber,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      tel_number = #{telNumber,jdbcType=VARCHAR},
      work_place = #{workPlace,jdbcType=VARCHAR},
      entry_time = #{entryTime,jdbcType=VARCHAR},
      outer_position = #{outerPosition,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      sortable_custom_info = #{sortableCustomInfo,jdbcType=LONGVARCHAR},
      custom_info = #{customInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.uniubi.model.po.TEmployee">
    update t_employee
    set account_id = #{accountId,jdbcType=BIGINT},
      organization_id = #{organizationId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      employee_number = #{employeeNumber,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      tel_number = #{telNumber,jdbcType=VARCHAR},
      work_place = #{workPlace,jdbcType=VARCHAR},
      entry_time = #{entryTime,jdbcType=VARCHAR},
      outer_position = #{outerPosition,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>